# Install Django Admin Startappprojcet 

# EP-01 ------------------------------
# Install app
# $> python manage.py startapp userauths

python manage.py startapp store
python manage.py startapp vendor
python manage.py startapp customer
python manage.py startapp blog


# ecom_proj>settings.py
    # userauths
    # store
    # vendor
    # customer
    # blog

#Install and connect another module 
    # anymail > https://pypi.org/project/django-anymail/
    # django_recaptcha      > Django reCAPTCHA https://pypi.org/project/django-recaptcha/

# Create Templates folder and import os
    # ecom_proj>settings.py 
        # import os
        # TEMPLATES = [
    {
        'DIRS': [os.path.join(BASE_DIR, 'templates')],     
    },
]

# Create Static and Media folder
STATIC_URL = 'static/'

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [BASE_DIR / 'static']

MEDIA_URL = "/media/" # website.com/media/

MEDIA_ROOT = [BASE_DIR / 'media']

# Django Admin Setup and Customization: E-commerce Website using Django, EP 2 ==============
# Create Super user 
$> python manage.py migrate

$>  python manage.py createsuperuser
DJANGO_SUPERUSER_USERNAME=admin \
DJANGO_SUPERUSER_EMAIL=admin@example.com \
DJANGO_SUPERUSER_PASSWORD=yourpassword \
python manage.py createsuperuser --noinput
change password: Admin123@!
====================
python manage.py createsuperuser
DJANGO_SUPERUSER_USERNAME=admin \
DJANGO_SUPERUSER_EMAIL=csenazmul@gmail.com \
DJANGO_SUPERUSER_PASSWORD=Admin123@! \
python manage.py createsuperuser --noinput
change password: Admin123@!

#Installation¶ =========================

Install the latest pypi release with pip install -U django-jazzmin

Add jazzmin to your INSTALLED_APPS before django.contrib.admin, and Voila!

INSTALLED_APPS = [
    'jazzmin',

    'django.contrib.admin',
    [...]
]
#=======================End

# Environment Variables In Django: E-commerce Website using Django, EP 3
from environ import Env

env = Env()
env.read_env()
#==============
এই কোডটি Django প্রজেক্টে পরিবেশ ভেরিয়েবল (environment variables) ব্যবহার করার জন্য সেট আপ করছে। এটি django-environ লাইব্রেরি ব্যবহার করে, যা পরিবেশ ভেরিয়েবল পড়া এবং ব্যবহার করা সহজ করে তোলে।
1. from environ import Env: এই লাইনটি django-environ লাইব্রেরি থেকে Env ক্লাসটি ইমপোর্ট করছে।
env = Env(): এখানে Env ক্লাসের একটি নতুন ইনস্ট্যান্স তৈরি করা হচ্ছে এবং এটিকে env ভেরিয়েবলে অ্যাসাইন করা হচ্ছে।
3. env.read_env(): এই মেথডটি প্রজেক্টের রুট ডিরেক্টরিতে থাকা .env ফাইল থেকে পরিবেশ ভেরিয়েবলগুলি পড়ে এবং সেগুলিকে প্রজেক্টের পরিবেশে লোড করে।
এই সেটআপের পরে, আপনি env অবজেক্ট ব্যবহার করে আপনার .env ফাইলে সংজ্ঞায়িত পরিবেশ ভেরিয়েবলগুলি অ্যাক্সেস করতে পারবেন। উদাহরণস্বরূপ:
এই পদ্ধতিটি আপনার প্রজেক্টের কনফিগারেশন ম্যানেজ করার একটি নিরাপদ এবং সুবিধাজনক উপায় প্রদান করে, বিশেষ করে যখন আপনি সংবেদনশীল তথ্য (যেমন ডাটাবেস পাসওয়ার্ড বা API কী) সংরক্ষণ করতে চান যা সোর্স কন্ট্রোলে কমিট করা উচিত নয়।



#Models and Data Structure in Django: E-commerce Website Using Django, EP 4.